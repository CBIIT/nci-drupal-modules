From 79981cd680c3330d5ba2aaa7b84733cb5a0ae096 Mon Sep 17 00:00:00 2001
From: Ron Shimshock <ron@shimshockgroup.com>
Date: Wed, 2 Dec 2015 02:16:01 -0600
Subject: [PATCH] Issue #2160023 - Date field repeat option

---
 multiple_fields_remove_button.module | 83 +++++++++++++++++++-----------------
 1 file changed, 45 insertions(+), 38 deletions(-)

diff --git a/multiple_fields_remove_button.module b/multiple_fields_remove_button.module
index a08e270..a1e5a66 100644
--- a/multiple_fields_remove_button.module
+++ b/multiple_fields_remove_button.module
@@ -9,8 +9,8 @@
  * Implements hook_menu().
  */
 function multiple_fields_remove_button_menu() {
-    $items = array();
-    $items['multiple_fields_remove_button/ajax'] = array(
+  $items = array();
+  $items['multiple_fields_remove_button/ajax'] = array(
     'title' => 'Remove item callback',
     'page callback' => 'multiple_fields_remove_button_js',
     'delivery callback' => 'ajax_deliver',
@@ -20,8 +20,8 @@ function multiple_fields_remove_button_menu() {
     'file path' => 'includes',
     'file' => 'form.inc',
   );
-    
-    return $items;
+
+  return $items;
 }
 
 /**
@@ -30,6 +30,7 @@ function multiple_fields_remove_button_menu() {
 function multiple_fields_remove_button_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
   
 }
+
 /**
  * Ajax callback remove field when remove click is trigger.
  *
@@ -39,10 +40,10 @@ function multiple_fields_remove_button_form_field_ui_field_edit_form_alter(&$for
  * @see multiple_fields_remove_button_field_widget_form_alter()
  */
 function multiple_fields_remove_button_js() {
-   if (isset($_POST['ajax_html_ids'])) {
+  if (isset($_POST['ajax_html_ids'])) {
     unset($_POST['ajax_html_ids']);
   }
- 
+
   list($form, $form_state) = ajax_get_form();
   drupal_process_form($form['#form_id'], $form, $form_state);
   // Get the information on what we're removing.
@@ -72,10 +73,11 @@ function multiple_fields_remove_button_js() {
  */
 function multiple_fields_remove_button_field_widget_form_alter(&$element, &$form_state, $context) {
   // Remove button for the following field type widgets
-  $fieldwidgets = array(
+  $field_widgets = array(
     'multiple_selects',
     'text_textfield',
     'date_popup',
+    'date_select',
     'date_text',
     'link_field',
     'entityreference_autocomplete',
@@ -86,9 +88,9 @@ function multiple_fields_remove_button_field_widget_form_alter(&$element, &$form
     'location',
   );
   // Add extra widgets with the help of others modules.
-  drupal_alter('multiple_field_remove_button_field_widgets', $fieldwidgets);
+  drupal_alter('multiple_field_remove_button_field_widgets', $field_widgets);
 
-  if ($context['field']['cardinality'] == FIELD_CARDINALITY_UNLIMITED && in_array($context['instance']['widget']['type'], $fieldwidgets)) {
+  if ($context['field']['cardinality'] == FIELD_CARDINALITY_UNLIMITED && in_array($context['instance']['widget']['type'], $field_widgets)) {
 
     $original_element = $element;
 
@@ -102,27 +104,33 @@ function multiple_fields_remove_button_field_widget_form_alter(&$element, &$form
     $delta = isset($original_element['#delta']) ? $original_element['#delta'] : 0;
 
     // Get parent which will we use into Remove Button Element.
-    $parents = array_merge($field_parents, array(
-      $field_name,
-      $language,
-      $delta
-    ));
-
-    $element['remove_button'] = array(
-      '#delta' => $delta,
-      '#name' => implode('_', $parents) . '_remove_button',
-      '#type' => 'submit',
-      '#value' => t('Remove'),
-      '#validate' => array(),
-      '#attributes' => array('class' => array('multiple-fields-remove-button')),
-      '#submit' => array('multiple_fields_remove_button_submit_handler'),
-      '#limit_validation_errors' => array(),
-      '#ajax' => array(
-        'path' => 'multiple_fields_remove_button/ajax',
-        'effect' => 'fade',
-      ),
-      '#weight' => 1000,
-    );
+    $parents = array_merge($field_parents, array($field_name, $language, $delta));
+
+    // Do not add Remove button if a Date field using the Repeat option.
+    $date_widgets = array('date_popup', 'date_select', 'date_text');
+    $date_repeat_field = FALSE;
+    if (in_array($context['instance']['widget']['type'], $date_widgets)) {
+      if ($context['field']['settings']['repeat']) {
+        $date_repeat_field = TRUE;
+      }
+    }
+    if (!$date_repeat_field) {
+      $element['remove_button'] = array(
+        '#delta' => $delta,
+        '#name' => implode('_', $parents) . '_remove_button',
+        '#type' => 'submit',
+        '#value' => t('Remove'),
+        '#validate' => array(),
+        '#attributes' => array('class' => array('multiple-fields-remove-button')),
+        '#submit' => array('multiple_fields_remove_button_submit_handler'),
+        '#limit_validation_errors' => array(),
+        '#ajax' => array(
+          'path' => 'multiple_fields_remove_button/ajax',
+          'effect' => 'fade',
+        ),
+        '#weight' => 1000,
+      );
+    }
   }
 }
 
@@ -140,7 +148,6 @@ function multiple_fields_remove_button_field_widget_form_alter(&$element, &$form
 function multiple_fields_remove_button_submit_handler($form, &$form_state) {
   $button = $form_state['triggering_element'];
   $delta = $button['#delta'];
-  $inpt = 'input';
   // Where in the form we'll find the parent element.
   $address = array_slice($button['#array_parents'], 0, -2);
 
@@ -160,14 +167,14 @@ function multiple_fields_remove_button_submit_handler($form, &$form_state) {
 
     $moving_element = drupal_array_get_nested_value($form, $old_element_address);
     $moving_element_value = drupal_array_get_nested_value($form_state['values'], $old_element_address);
-    $moving_element_input = drupal_array_get_nested_value($form_state[$inpt], $old_element_address);
+    $moving_element_input = drupal_array_get_nested_value($form_state['input'], $old_element_address);
 
     // Tell the element where it's being moved to.
     $moving_element['#parents'] = $new_element_address;
 
     // Move the element around.
     form_set_value($moving_element, $moving_element_value, $form_state);
-    drupal_array_set_nested_value($form_state[$inpt], $moving_element['#parents'], $moving_element_input);
+    drupal_array_set_nested_value($form_state['input'], $moving_element['#parents'], $moving_element_input);
 
     // Move the entity in our saved state.
     if (isset($field_state['entity'][$i + 1])) {
@@ -179,8 +186,8 @@ function multiple_fields_remove_button_submit_handler($form, &$form_state) {
   }
 
   // Replace the deleted entity with an empty one. This helps to ensure that
-  // trying to add a new entity won't ressurect a deleted entity
-  // from thev trash bin.
+  // trying to add a new entity won't resurrect a deleted entity
+  // from the trash bin.
   // $count = count($field_state['entity']);
   // Then remove the last item. But we must not go negative.
   if ($field_state['items_count'] > 0) {
@@ -196,18 +203,18 @@ function multiple_fields_remove_button_submit_handler($form, &$form_state) {
   // if I have items weight weights 3 and 4, and I change 4 to 3 but leave
   // the 3, the order of the two 3s now is undefined and may not match what
   // the user had selected.
-  $input = drupal_array_get_nested_value($form_state[$inpt], $address);
+  $input = drupal_array_get_nested_value($form_state['input'], $address);
   // Sort by weight.
   uasort($input, '_field_sort_items_helper');
 
-  // Reweight everything in the correct order.
+  // Re-weight everything in the correct order.
   $weight = -1 * $field_state['items_count'];
   foreach ($input as $key => $item) {
     if ($item) {
       $input[$key]['_weight'] = $weight++;
     }
   }
-  drupal_array_set_nested_value($form_state[$inpt], $address, $input);
+  drupal_array_set_nested_value($form_state['input'], $address, $input);
   field_form_set_state($parents, $field_name, $langcode, $form_state, $field_state);
 
   $form_state['rebuild'] = TRUE;
-- 
2.6.3
