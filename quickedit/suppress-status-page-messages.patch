diff --git a/quickedit/quickedit.install b/quickedit/quickedit.install
index 21b9bdb..9d88689 100644
--- a/quickedit/quickedit.install
+++ b/quickedit/quickedit.install
@@ -68,11 +68,11 @@ function quickedit_requirements($phase) {
         'description' => t('This plugin is essential for CKEditor to work with in-place editing.<br>Please <a href="!builder-url">create a custom build</a> of CKEditor that includes this plugin.', array('!builder-url' => 'http://ckeditor.com/builder')),
         'severity' => REQUIREMENT_ERROR,
       );
-      if (FALSE !== strpos($ckeditor_js, 'CKEDITOR.plugins.add("sharedspace"')) {
+      //if (FALSE !== strpos($ckeditor_js, 'CKEDITOR.plugins.add("sharedspace"')) {
         $requirements['quickedit_libraries_ckeditor_sharedspace']['value'] = t('Included');
         $requirements['quickedit_libraries_ckeditor_sharedspace']['severity'] = REQUIREMENT_OK;
         unset($requirements['quickedit_libraries_ckeditor_sharedspace']['description']);
-      }
+      //}
 
       // If the "Source" button is used in any of the CKEditor "profiles", then
       // also ensure that the "Source Dialog" plugin is available, because it
@@ -92,11 +92,11 @@ function quickedit_requirements($phase) {
           'description' => t('This plugin is necessary to keep the "edit source" functionality while in-place editing.<br>Please <a href="!builder-url">create a custom build</a> of CKEditor that includes this plugin.', array('!builder-url' => 'http://ckeditor.com/builder')),
           'severity' => REQUIREMENT_ERROR,
         );
-        if (FALSE !== strpos($ckeditor_js, 'CKEDITOR.plugins.add("sourcedialog"')) {
+        //if (FALSE !== strpos($ckeditor_js, 'CKEDITOR.plugins.add("sourcedialog"')) {
           $requirements['quickedit_libraries_ckeditor_sourcedialog']['value'] = t('"Source Dialog" CKEditor plugin included');
           $requirements['quickedit_libraries_ckeditor_sourcedialog']['severity'] = REQUIREMENT_OK;
           unset($requirements['quickedit_libraries_ckeditor_sourcedialog']['description']);
-        }
+        //}
       }
     }
 
@@ -113,6 +113,7 @@ function quickedit_requirements($phase) {
     // edit.
     if (!user_access('access in-place editing', user_load(0))) {
       // Redirect the user back to the status page after modifying permissions.
+      /*
       $destination = array('destination' => 'admin/reports/status');
       $requirements['quickedit_theme']['value'] = t('Permission change required to determine compatibility.');
       $requirements['quickedit_theme']['description'] = t('In order to determine compatibility, you must temporarily grant anonymous users the !permission-name permission.', array(
@@ -120,6 +121,7 @@ function quickedit_requirements($phase) {
       ));
       $requirements['quickedit_theme']['severity'] = REQUIREMENT_INFO;
       return $requirements;
+      */
     }
 
     $query = new EntityFieldQuery();
@@ -151,7 +153,7 @@ function quickedit_requirements($phase) {
       // data-quickedit-entity-id attribute that begins with "node/<node ID>".
       // "at least one" because there may be multiple entities on this page.
       if ($xpath->query("//*[starts-with(@data-quickedit-entity-id, 'node/" . $node_id . "')]")->length == 0) {
-        $errors[] = t("Quick Edit's attributes on entities are missing");
+      //  $errors[] = t("Quick Edit's attributes on entities are missing");
       }
 
       // There should be at least as many DOM elements with a
@@ -174,7 +176,7 @@ function quickedit_requirements($phase) {
         $visible_field_count++;
       }
       if ($xpath->query("//*[starts-with(@data-quickedit-field-id, 'node/" . $node_id . "')]")->length < $visible_field_count) {
-        $errors[] = t("Quick Edit's attributes on fields are missing");
+      //  $errors[] = t("Quick Edit's attributes on fields are missing");
       }
 
       if ($errors) {
